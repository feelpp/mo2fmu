name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

jobs:

  build_wheel:
    runs-on: self-${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    name: Build wheel package
    if: "!contains(github.event.head_commit.message, 'skip wheel')"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ifs: true
          submodules: recursive
          clean: true

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install Python/Node Env
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r pyproject.toml --extra dev --extra test
          npm install
          npx downdoc README.adoc

      - name: Build mo2fmu wheel
        run: |
          source .venv/bin/activate
          pipx run build
          uv pip install dist/*.whl

      - name: Sleep to avoid dymola license conflit
        if: matrix.os == 'ubuntu-24.04'
        run: |
          echo "Sleeping to wait dymola license availability"
          sleep 120

      - name: Python Tests
        run: |
          source .venv/bin/activate
          pytest

        env:
          PYTHONPATH: ${{ github.workspace }}
          GIRDER_API_KEY: ${{ secrets.GIRDER }}
          DYMOLA_RUNTIME_LICENSE: "${{ secrets.DYMOLA_RUNTIME_LICENSE }}"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-wheel-${{ matrix.os }}
          path: dist/*.whl

  build_docs:
    needs: build_wheel
    runs-on: self-${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    name: Build & Deploy docs
    if: "!contains(github.event.head_commit.message, 'skip docs')"
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive
          clean: true

      - name: Install credentials
        run: echo "https://$GITHUB_OAUTH:@github.com" > $HOME/.git-credentials
        env:
          GITHUB_OAUTH: ${{ secrets.CR_PAT_WORKFLOW }}

      - name: Download Wheels
        uses: actions/download-artifact@v4
        with:
          name: artifacts-wheel-${{ matrix.os }}
          path: dist/

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install Python deps
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install dist/*.whl

      - name: Check if supplemental-ui exists
        run: |
          echo "Current dir: $(pwd)"
          ls -la ./docs/antora/
          ls -la ./docs/antora/supplemental-ui

      - name: Debug find supplemental-ui
        run: find . -name "supplemental-ui" -type d

      - name: Build Antora site
        run: |
          source .venv/bin/activate
          npm install
          npm run antora || true
          npm run antora
        env:
          GIRDER_API_KEY: ${{ secrets.GIRDER }}

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-22.04'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: public

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build_wheel
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download wheel artifact (Ubuntu 22.04)
        uses: actions/download-artifact@v4
        with:
          name: artifacts-wheel-ubuntu-22.04
          path: ./dist/

      - name: Create Release & Upload Wheel
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          generate_release_notes: true
          files: |
            ./dist/*.whl
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
