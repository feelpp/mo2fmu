name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

jobs:

  build_wheel:
    runs-on: self-${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    name: Build wheel package
    if: "!contains(github.event.head_commit.message, 'skip wheel')"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ifs: true
          submodules: recursive
          clean: true

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install Python/Node Env
        run: |
          uv venv --system-site-packages
          source .venv/bin/activate
          uv pip install -r pyproject.toml --extra dev --extra test
          npm install --verbose
          npx downdoc README.adoc

      - name: Build mo2fmu wheel
        run: |
          source .venv/bin/activate
          pipx run build
          uv pip install dist/*.whl

      - name: Python Tests
        run: |
          source .venv/bin/activate
          pytest

        env:
          PYTHONPATH: ${{ github.workspace }}
          GIRDER_API_KEY: ${{ secrets.GIRDER }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-wheel-${{ matrix.os }}
          path: dist/*.whl

  build_docs:
    needs: build_wheel
    runs-on: self-${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    name: Build & Deploy docs
    if: "!contains(github.event.head_commit.message, 'skip docs')"
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive
          clean: true

      - name: Install credentials
        run: echo "https://$GITHUB_OAUTH:@github.com" > $HOME/.git-credentials
        env:
          GITHUB_OAUTH: ${{ secrets.CR_PAT_WORKFLOW }}

      - name: Download Wheels
        uses: actions/download-artifact@v4
        with:
          name: artifacts-wheel-${{ matrix.os }}
          path: dist/

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install Python deps
        run: |
          uv venv --system-site-packages
          source .venv/bin/activate
          uv pip install dist/*.whl

      - name: Build Antora site
        run: |
          source .venv/bin/activate
          npm install --verbose
          npm run antora || true
          npm run antora
        env:
          GIRDER_API_KEY: ${{ secrets.GIRDER }}

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-22.04'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: public

  # build:
  #   runs-on: self-ubuntu-22.04
  #   if: "!contains(github.event.head_commit.message, 'ci skip') || ${{ inputs.build }} == 'true'"
  #   name: Check Build, Install, Run
  #   container: ghcr.io/feelpp/dymola:2021
  #   steps:
  #   - run: /usr/bin/git --version
  #   - uses: actions/checkout@v4
  #   - name: Build mo2fmu
  #     run: |
  #       pip3 install click spdlog
  #       pip3 install --editable .
  #       mo2fmu -v ode_exp.mo .

  # deliver:
  #   runs-on: self-ubuntu-22.04
  #   needs: build
  #   if: "${{ inputs.deliver }} == 'true'"
  #   # needs: check
  #   name: Docker Build, Tag, Push

  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       lfs: true
  #   -
  #       name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ghcr.io/feelpp/mo2fmu
  #         tags: |
  #           type=ref,event=branch
  #           type=ref,event=pr
  #           type=semver,pattern={{version}}
  #           type=semver,pattern={{major}}.{{minor}}
  #   -
  #     name: Set up QEMU
  #     uses: docker/setup-qemu-action@v3
  #   -
  #     name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
  #   -
  #     name: Login to GitHub Container Registry
  #     if: github.event_name != 'pull_request'
  #     uses: docker/login-action@v3
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.repository_owner }}
  #       password: ${{ secrets.CR_PAT }}
  #   -
  #     name: Build container image
  #     uses: docker/build-push-action@v4
  #     with:
  #       push: ${{ github.event_name != 'pull_request' }}
  #       context: artifacts
  #       tags: ${{ steps.meta.outputs.tags }}
  #       labels: ${{ steps.meta.outputs.labels }}
  #       file: ./Dockerfile